name:                fae
-- My take on semantic versioning:
--   a.*.*.* -> (a + 1).0.0.0 : Breaking API changes
--   *.b.*.* -> *.(b + 1).0.0 : Compatible but major new features
--   *.*.c.* -> *.*.(c + 1).0 : Bugfixes that may change the (incorrect) behavior of existing code
--                              or minor, compatible new features
--   *.*.*.d -> *.*.*.(d + 1) : Adding omitted exports, GHC extensions, cosmetic stuff, demos ...
version:             1.1.0.0
-- synopsis:
-- description:
homepage:            https://github.com/Consensys/Fae
license:             BSD3
license-file:        LICENSE
author:              Ryan Reich
maintainer:          ryan.reich@consensys.net
copyright:           MIT
category:            none
build-type:          Simple
extra-source-files:  README.md
cabal-version:       >=1.10

library
  hs-source-dirs:      src, common
  exposed-modules:     
    Blockchain.Fae
    Blockchain.Fae.FrontEnd
    Blockchain.Fae.Internal
    Blockchain.Fae.Contracts
    Blockchain.Fae.Currency
  other-modules:
    Blockchain.Fae.Internal.Contract
    Blockchain.Fae.Internal.Crypto
    Blockchain.Fae.Internal.Exceptions
    Blockchain.Fae.Internal.GenericInstances
    Blockchain.Fae.Internal.GetInputValues
    Blockchain.Fae.Internal.IDs
    Blockchain.Fae.Internal.IDs.Types
    Blockchain.Fae.Internal.Messages,
    Blockchain.Fae.Internal.TXSummary
    Blockchain.Fae.Internal.Reward
    Blockchain.Fae.Internal.Storage
    Blockchain.Fae.Internal.Suspend
    Blockchain.Fae.Internal.Transaction
    Blockchain.Fae.Internal.TX
    Blockchain.Fae.Internal.Versions
    Common.Lens
  build-depends:       
    base >= 4.10 && < 5,
    base16-bytestring,
    bytestring,
    cereal,
    containers,
    cryptonite >= 0.24,
    deepseq,
    exceptions,
    filepath,
    hint,
    lens,
    memory,
    mtl,
    pretty,
    template-haskell,
    text,
    transformers
  default-language:    Haskell2010
  default-extensions:
    BangPatterns
    ConstraintKinds
    DefaultSignatures
    DeriveGeneric
    ExistentialQuantification
    FlexibleContexts
    FlexibleInstances
    FunctionalDependencies
    GeneralizedNewtypeDeriving
    LambdaCase
    MultiParamTypeClasses
    MultiWayIf
    NamedFieldPuns
    OverloadedStrings
    PatternGuards
    RankNTypes
    RecordWildCards
    ScopedTypeVariables
    StandaloneDeriving
    TupleSections
    TypeApplications
    TypeFamilies
    TypeOperators

executable faeServer
  buildable: True
  hs-source-dirs:      bin, common
  main-is:             FaeServer.hs
  ghc-options:         -dynamic -threaded -rtsopts -with-rtsopts=-N
  other-modules:
    Common.JSON
    Common.Lens
    Common.ProtocolT
    FaeServer.App
    FaeServer.Args
    FaeServer.Concurrency
    FaeServer.Fae
    FaeServer.Faeth
    FaeServer.Git
    FaeServer.History
    FaeServer.Modules
  build-depends:       
    aeson,
    base, 
    base16-bytestring,
    bytestring,
    cereal,
    containers,
    deepseq,
    directory,
    fae,
    filepath,
    http-types,
    lens,
    lifted-base,
    mtl,
    pretty,
    process,
    stm,
    template-haskell,
    text,
    transformers,
    unix,
    wai,
    wai-extra,
    warp,
    websockets,
    zlib
  default-language:    Haskell2010
  default-extensions:
    DeriveGeneric
    FlexibleContexts
    FlexibleInstances
    GeneralizedNewtypeDeriving
    LambdaCase
    MultiParamTypeClasses
    NamedFieldPuns
    OverloadedStrings
    RankNTypes
    RecordWildCards
    ScopedTypeVariables
    TypeApplications

executable postTX
  buildable: True
  hs-source-dirs: bin, common
  main-is: PostTX.hs
  other-modules:
    Common.JSON
    Common.Lens
    Common.ProtocolT
    PostTX.Args
    PostTX.EnvVars
    PostTX.Faeth
    PostTX.Network
    PostTX.SpecParser
    PostTX.Submit
    PostTX.TXSpec
    PostTX.View
  build-depends:
    aeson,
    base,
    base16-bytestring,
    bytestring,
    cereal,
    containers,
    deepseq,
    directory,
    fae,
    filepath,
    haskeline,
    http-client,
    lens,
    mtl,
    pretty,
    process,
    template-haskell,
    text,
    time,
    websockets,
    zlib
  default-language: Haskell2010
  default-extensions:
    DeriveGeneric
    FlexibleContexts
    FlexibleInstances
    GeneralizedNewtypeDeriving
    RankNTypes
    RecordWildCards
    MultiParamTypeClasses
    NamedFieldPuns
    OverloadedStrings
    TupleSections
    TypeApplications

executable collectPackage
  buildable: True
  hs-source-dirs: tools, common
  main-is: CollectPackage.hs
  other-modules:
    Common.Lens
    PackageInfo
  build-depends:
    base,
    bytestring,
    Cabal,
    containers,
    directory,
    filepath,
    ghc-boot,
    lens,
    mtl,
    process,
    template-haskell,
    unix
  default-language: Haskell2010
  default-extensions:
    FlexibleContexts
    FlexibleInstances
    MultiParamTypeClasses
    NamedFieldPuns
    RankNTypes
    RecordWildCards
